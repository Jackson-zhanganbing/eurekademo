server:
  port: 8201
spring:
  application:
    name: microservice-consumer-user
  redis:
    host: 127.0.0.1
    port: 6379
  cache:
    type: redis
  kafka:
    #bootstrap-servers: 127.0.0.1:9092,127.0.0.2:9092,127.0.0.3:9092
    bootstrap-servers: 127.0.0.1:9092
    producer:
      retries: 0
      batch-size: 16384
      buffer-memory: 33554432
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        linger.ms: 1

    consumer:
      group-id: mygroup
      enable-auto-commit: false
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        session.timeout.ms: 15000
  datasource:
    name: eureka-test
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      url: jdbc:mysql://127.0.0.1:3306/zab
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
      fetch-registry: true
      register-with-eureka: false
#  #feign 对hytrix的支持
feign:
  hystrix:
    enabled: true
ribbon:
  # 开启eureka与ribbon的集成
  eureka:
    enabled: true
  # 暂不开启熔断机制
  hystrix:
    enabled: false
  # 配置ribbon默认的超时时间
  ConnectTimeout: 2000
  ReadTimeout: 2000
  # 是否开启重试
  OkToRetryOnAllOperations: true
  # 重试的时候实例切换次数
  MaxAutoRetriesNextServer: 3
  # 每个实例重试次数
  MaxAutoRetries: 2
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000
mybatis:
  mapper-locations: classpath:mapping/*.xml
  type-aliases-package: com.changan.consumerdemo.entity
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
